// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "CaveOp":
            case "CaveOp1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . 2 2 2 2 . . . 
. . . . . . . . . 2 2 2 2 2 . . 
. . . . . . . . 2 . . . . 2 2 . 
. . . . . . . . . . . . . 2 2 2 
. . . . . . . . . . . . . . 2 2 
. . . . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass1,sprites.dungeon.floorLight2,sprites.castle.rock0,myTiles.tile3,sprites.builtin.forestTiles0,sprites.swamp.swampTile0], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "TheDesent":
            case "TheDesent1":return tiles.createTilemap(hex``, img`
................
................
................
2222222222222...
................
................
................
................
................
......2222222222
................
................
................
................
................
222222...2222...
................
................
................
................
................
....222222222222
................
................
................
................
................
222222222222....
................
................
................
.222222222222222
`, [myTiles.transparency16,sprites.builtin.oceanSand7,sprites.builtin.oceanSand2,sprites.builtin.oceanSand3,sprites.dungeon.stairLarge,sprites.builtin.oceanSand5,sprites.builtin.oceanSand1,myTiles.tile2], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . 2 2 
. . . . . . . . . . . 2 . . . . 
. . . . . . . 2 . . . 2 . . . . 
. . . . . . . 2 . . . 2 . . . . 
. . . . 2 . . 2 . . . 2 . . . . 
. . . . 2 . . 2 . . . 2 . . . . 
. . 2 . 2 . . 2 . . . 2 . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.collectibleInsignia,sprites.builtin.forestTiles0,sprites.dungeon.hazardLava0], TileScale.Sixteen);
            case "ancient city":
            case "ancient city1":return tiles.createTilemap(hex`a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0a0ab07040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404`, img`
................................................
................................................
................................................
................................................
................................................
................................................
................................................
.................................222222222222222
..........................................2.....
.............................2............2.....
...........................2.2.2..........2.....
...........................2.2.2.2........2.....
........22222222222......2.2.2.2.2.2......2.....
.......22.........22...2.2.2.2.2.2.2.2..........
.222..222.........222..2.2.2.2.2.2.2.2.2........
222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.stairNorth,sprites.dungeon.floorDark0,sprites.dungeon.floorLight3,sprites.dungeon.floorMixed,sprites.dungeon.hazardLava1,sprites.dungeon.hazardLava0,sprites.dungeon.chestClosed,sprites.dungeon.collectibleInsignia,myTiles.tile6,myTiles.tile7,sprites.dungeon.chestOpen], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "Coble stone":
            case "tile1":return tile1;
            case "CaveMouth":
            case "tile3":return tile3;
            case "Rail":
            case "tile4":return tile4;
            case "myTile0":
            case "tile5":return tile5;
            case "myTile":
            case "tile2":return tile2;
            case "Dirt":
            case "tile6":return tile6;
            case "myTile1":
            case "tile7":return tile7;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
